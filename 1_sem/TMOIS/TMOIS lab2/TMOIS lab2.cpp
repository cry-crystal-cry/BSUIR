#include <iostream>
#include <conio.h>

using namespace std;

int main()
{
	setlocale(LC_ALL, "rus");
	int lena, lenb, lend, lenc, lenf;
	bool k;
	int a[100], b[100], d[200], c[100], f[100];		//Создаем множества А, В, D

	cout << "Каким способом вы хотите задать множества? \n 1)Для задания множеств перечислением нажмите \"1\" \n 2) Для задания множества высказыванием нажмите \"2\" " << endl;

	switch (_getch()) {
	case '1':
		cout << "Задайте мощность множества А(1<=А<=100):" << endl;
		cin >> lena;		//Задание мощности множества А
		cout << "Вводите элементы множества А через пробел:" << endl;
		for (int i = 0; i < lena; i++)
			cin >> a[i];	//Ввод множества А с клавиатуры через пробел

		cout << "Задайте мощность множества В(1<=В<=100):" << endl;
		cin >> lenb;		//Задание мощности множества В
		cout << "Вводите элементы множества B через пробел:" << endl;
		for (int i = 0; i < lenb; i++)
			cin >> b[i];	//Ввод множества В с клавиатуры через пробел
		break;

	default:
		cout << "Задайте мощность множества А(1<=А<=100):" << endl;
		cin >> lena;		//Задание мощности множества А
		cout << "Множество А имеет вид:" << endl;
		for (int i = 1; i <= lena; i++) {
			if (i <= 58) {
				a[i - 1] = i + 42; // Задание множества А условием
			}
			else a[i - 1] = i - 58;
			cout << a[i-1] << " ";	//Вывод на экра множества А
		}
		

		cout << "\nЗадайте мощность множества В(1<=В<=100):" << endl;
		cin >> lenb;		//Задание мощности множества В
		cout << "Множество B имеет вид:" << endl;
		for (int i = 1; i <= lenb; i++) {
			if (i <= 50) {
				b[i - 1] = 2 * i;	//Задание множества B условием
			}
			else b[i - 1] = (i - 50) * 2 - 1;
			cout << b[i-1] << " ";		//Вывод на экра множества B
		}
		break;
	}


	


START:
	cout << "\nКакую операцию над множествами вы хотите выполнить?" << endl;	//Спрашиваем у пользователя какую операцию он хочет выполнить
	cout << "1) Объединение - нажмите \"1\" " << endl;
	cout << "2) Пересечение - нажмите \"2\" " << endl;
	cout << "3) Разность множеств А и В - нажмите \"3\" " << endl;
	cout << "4) Разность множеств В и А - нажмите \"4\" " << endl;
	cout << "5) Симметрическая разность множеств А и В - нажмите \"5\" " << endl;
	cout << "6) Дополнение множества А - нажмите \"6\" " << endl;
	cout << "7) Дополнение множества В - нажмите \"7\" " << endl;
	cout << "8) Декартово произведение множеств А и В - нажмите \"8\" " << endl;
	cout << "9) Декартово произведение множеств В и А - нажмите \"9\" \n " << endl;
	switch (_getch()) {
	case '1':		//Объединение
		lend = lena;
		for (int i = 0; i < lend; i++)
			d[i] = a[i];							//Перенос всех элементов множеста А в множество D

		for (int j = 0; j < lenb; j++) {			//Берем элемент множества B
			k = true;
			for (int i = 0; i < lend; i++) {		//Берем элемент множества D
				if (d[i] == b[j]) {					//Проверяем, что элемент множества В не встречается в множестве D
					k = false;
					break;
				}
			}
			if (k)
				d[lend++] = b[j];					//Если элемент множества В не встретился в множестве D, записываем его в множество D
		}
		break;

	case '2':		//Пересечение
		lend = 0;
		for (int i = 0; i < lena; i++) {			//Берем элемент множества А
			for (int j = 0; j < lenb; j++) {		//Берем элемент множества B
				if (a[i] == b[j]) {					//Проверяем совпадают ли выбранные элементы множества А и В
					d[lend++] = a[i];				//Если элементы совпали, записываем этот элемент в множество D
					break;
				}
			}
		}
		break;

	case '3':		//Разность множеств А и В
		lend = 0;
		for (int i = 0; i < lena; i++) {		//Берем элемент множества А
			k = true;
			for (int j = 0; j < lenb; j++) {	//Берем элемент множества В
				if (a[i] == b[j]) {				//Проверяем совпадают ли выбранные элементы множества А и В 
					k = false;
					break;
				}
			}
			if (k)
				d[lend++] = a[i];				//Если элементы не совпали, записываем элемент множества А в множество D
		}
		break;

	case '4':		//Разность множеств В и А
		lend = 0;
		for (int j = 0; j < lenb; j++) {		//Берем элемент множества В
			k = true;
			for (int i = 0; i < lena; i++) {	//Берем элемант множества А
				if (b[j] == a[i]) {				//Проверяем совпадают ли выбранные элементы множества А и В
					k = false;
					break;
				}
			}
			if (k)
				d[lend++] = b[j];				//Елси элементы не совпали, записываем элемент множества В в множество D
		}
		break;
	case '5':		//Симметрическая разность множеств А и В
		lenc = lenf = 0;
		//п.п. Разность А и В
		for (int i = 0; i < lena; i++) {		//Берем элемент множества А
			k = true;
			for (int j = 0; j < lenb; j++) {	//Берем элемент множества В
				if (a[i] == b[j]) {				//Проверяем совпадают ли выбранные элементы множества А и В
					k = false;
					break;
				}
			}
			if (k)
				c[lenc++] = a[i];				//Если элементы не совпали, записываем элемент множества А в множество C
		}

		//п.п. Разность В и А
		for (int j = 0; j < lenb; j++) {		//Берем элемент множества В
			k = true;
			for (int i = 0; i < lena; i++) {	//Берем элемант множества А
				if (b[j] == a[i]) {				//Проверяем совпадают ли выбранные элементы множества А и В
					k = false;
					break;
				}
			}
			if (k)
				f[lenf++] = b[j];				//Елси элементы не совпали, записываем элемент множества В в множество F
		}
		//п.п. Обьединение разности (В и А) и (А и В)
		lend = lenc;
		for (int i = 0; i < lend; i++)
			d[i] = c[i];							//Перенос всех элементов множеста C в множество D

		for (int j = 0; j < lenf; j++) {			//Берем элемент множества F
			k = true;
			for (int i = 0; i < lend; i++) {		//Берем элемент множества D
				if (d[i] == f[j]) {					//Проверяем, что элемент множества F не встречается в множестве D
					k = false;
					break;
				}
			}
			if (k)
				d[lend++] = f[j];					//Если элемент множества F не встретился в множестве D, записываем его в множество D
		}
		break;
	case '6':		//Дополнение множества А
		lend = 0;
		for (int i = 1; i <= 100; i++) {		//Задаем множество U и запоняем его натуральными числами до 100
			k = true;							//Берем элемент множества U
			for (int j = 0; j < lena; j++) {	//Берем элемент множества А
				if (a[j] == i) {				//Проверяем, что элемент множества U не встречается в множестве А
					k = false;
					break;
				}
			}
			if (k)
				d[lend++] = i;					//Если элемент множества U не встретился в множестве А, записываем его в множество D
		}
		break;

	case '7':		//Дополнение множества В
		lend = 0;
		for (int i = 1; i <= 100; i++) {		//Задаем множество U и запоняем его натуральными числами до 100
			k = true;							//Берем элемент множества U
			for (int j = 0; j < lenb; j++) {	//Берем элемент множества B
				if (b[j] == i) {				//Проверяем, что элемент множества U не встречается в множестве B
					k = false;
					break;
				}
			}
			if (k)
				d[lend++] = i;					//Если элемент множества U не встретился в множестве B, записываем его в множество D
		}
		break;

	case '8':		//Декартово произведение множеств А и В
		for (int i = 0; i < lena; i++)			//Берем элемент множества А
			for (int j = 0; j < lenb; j++) {	//Берем элемент множества В
				cout << "<" << a[i] << "," << b[j] << "> ";	/* Создаем кортеж, в котором значение первого элемента соответствует элементу 
множества А, значению второго элемента - элементу множества В. Добавляем кортеж в множество D */
			}
		lend = 0; //off set D output
		break;

	case '9':		//Декартово произведение множеств В и А
		for (int i = 0; i < lenb; i++)			//Берем элемент множества В
			for (int j = 0; j < lena; j++) {	//Берем элемент множества А
				cout << "<" << b[i] << "," << a[j] << "> ";	/* Создаем кортеж, в котором значение первого элемента соответствует элементу
множества В, значению второго элемента - элементу множества А. Добавляем кортеж в множество D */
			}
		lend = 0; //off set D output
		break;

	default:
		goto START;
		break;
	}


	for (int i = 0; i < lend; i++) cout << d[i] << " "; //Выводим множество D на экран
	cout << endl;
	cout << "\nДля того, чтобы повторно выполнить одну из операций нажмите \"1\" \t Для завершения работы нажмите \"2\" \n" << endl; 
	//Предлагаем пользователю повторно выполнить одну из операций или завершить работу
	if (_getch() == '1') goto START;	//Если пользователь нажал "1", возвращаем его к выбору операции

	return 0;	//Завершаем работу программы по требованию пользователя
} //Ilysha molodec